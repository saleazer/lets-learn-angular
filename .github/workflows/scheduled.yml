name: FleetWebClientScheduled

on:
  schedule:
    - cron: '*/5 * * * *'

env:
  ENVIRONMENT_PATH: src/assets/environment.json
  DIST_PATH: dist
  NODE_VERSION: "20.9.0"

jobs:
  buildClient:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: npm install
      run: npm i
      
    - name: Run Stryker
      run: npx stryker run | tee stryker-output.txt

    - name: Read mutation report
      id: read-mutation-report
      run: |
          mutation_score=$(grep -oP '^All files\s+\|\s+\K[0-9]+(\.[0-9]+)?(?=\s+\|)' stryker-output.txt)
          
          echo "MUTATION_SCORE=$mutation_score" >> $GITHUB_ENV

          clear_text_report=$(awk '/tests per mutant/{flag=1} /HtmlReporter/{flag=0} flag' stryker-output.txt)
          echo "CLEAR_TEXT_REPORT<<EOF" >> $GITHUB_ENV
          echo "$clear_text_report" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

    - name: Comment Mutation Results
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const reportContent = process.env.CLEAR_TEXT_REPORT;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Here is the mutation report:\n\n\`\`\`\n${reportContent}\n\`\`\``
          });

          const mutationScore = process.env.MUTATION_SCORE;
          Number.parseFloat(mutationScore) < 50
            ? core.setFailed(`Mutation score is below 50%: ${mutationScore}`)
            : null;
